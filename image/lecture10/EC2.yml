AWSTemplateFormatVersion: "2010-09-09"
Description: EC2

Parameters:
 NameBase: 
  Type: String
  Default: lecture10

 KeyName:
  Description: The name of the EC2 Key Pair
  Type: AWS::EC2::KeyPair::KeyName
  ConstraintDescription: Must be the name of an existing EC2 Key Pair

 MyCidrIp:
  NoEcho: true
  Type: String

Resources: 
 # SecurityGroup
 EC2SecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
    GroupDescription: Allow SSH and HTTP access
    VpcId: !ImportValue VPC
    Tags:
        - Key: Name
          Value: !Sub ${NameBase}-ec2
    # インバウンドルール
    SecurityGroupIngress: 
     # ssh
     - IpProtocol: tcp
       FromPort: 22
       ToPort: 22
       CidrIp: 119.229.77.103/32
     
     # HTTP
     - IpProtocol: tcp
       FromPort: 80
       ToPort: 80
       CidrIp: 119.229.77.103/32

 # EC2
 EC2:
  Type: AWS::EC2::Instance
  Properties:
    # AmazonLinux2 AMI ID
    ImageId: ami-0eda63ec8af4f056e
    # keypair
    KeyName: kadai
    InstanceType: t2.micro
    NetworkInterfaces: 
     - AssociatePublicIpAddress: true
       DeviceIndex: 0
       GroupSet:
        -  !Ref EC2SecurityGroup
       SubnetId: !ImportValue PublicSubnet1
    BlockDeviceMappings: 
     - DeviceName: /dev/xvda
       Ebs:
         VolumeType: gp2
         DeleteOnTermination: true
         VolumeSize: 16

   # IAMロールアタッチ
    IamInstanceProfile: !Ref InstanceProfile
    Tags:
     - Key: Name
       Value: !Sub ${NameBase}-ec2

 # IAM Instance Profile
 InstanceProfile:
  Type: AWS::IAM::InstanceProfile
  Properties: 
    Roles: 
      - kadai

Outputs: 
 EC2Id: 
  Description: The ID of the created EC2 instance
  Value: !Ref EC2
  Export:
   Name: EC2

 EC2SGId:
  Description: The ID of the created EC2 SecurityGroup
  Value: !Ref EC2SecurityGroup
  Export:
   Name: EC2SecurityGroup

